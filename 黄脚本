-- 加载Orion库
local OrionLib = loadstring(game:HttpGet("https://pastebin.com/raw/FUEx0f3G"))()
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

-- 工具函数：创建圆形边角
local function makeRound(obj, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = radius or UDim.new(0.5, 0) -- 默认正圆形
    corner.Parent = obj
    return corner
end

-- 北京时间显示面板
local LBLG = Instance.new("ScreenGui")
LBLG.Name = "LBLG"
LBLG.Parent = game.CoreGui
LBLG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
LBLG.Enabled = true

local LBL = Instance.new("TextLabel")
LBL.Name = "LBL"
LBL.Parent = LBLG
LBL.BackgroundTransparency = 1
LBL.BorderSizePixel = 0
LBL.Position = UDim2.new(0.75, 0, 0.01, 0)
LBL.Size = UDim2.new(0, 150, 0, 20)
LBL.Font = Enum.Font.GothamSemibold
LBL.Text = "加载中..."
LBL.TextColor3 = Color3.new(1, 1, 1)
LBL.TextSize = 14
LBL.RichText = true
LBL.ClipsDescendants = true

-- 彩色时间逻辑
local rainbowColors = {
    "<font color='#FF6B6B'>", "<font color='#FFD166'>", 
    "<font color='#06D6A0'>", "<font color='#118AB2'>", "<font color='#9B5DE5'>"
}
local colorIndex = 1
local colorTimer = 0
local gradientDuration = 1.5

local function HeartbeatUpdate(deltaTime)
    colorTimer += deltaTime
    if colorTimer >= gradientDuration then
        colorIndex = colorIndex % #rainbowColors + 1
        colorTimer = 0
    end
    LBL.Text = rainbowColors[colorIndex] .. "北京时间: " .. os.date("%H:%M:%S") .. "</font>"
end
RunService.Heartbeat:Connect(HeartbeatUpdate)

-- 创建主窗口（圆形风格配置）
local Window = OrionLib:MakeWindow({
    Name = "黄脚本",
    HidePremium = false,
    SaveConfig = true,
    IntroText = "黄脚本 - 功能面板",
    ConfigFolder = "黄脚本",
    Theme = "Dark",
    Icon = "rbxassetid://4483345998"
})

-- 欢迎通知
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "黄脚本",
    Text = "欢迎使用黄脚本 - 功能已加载",
    Duration = 4,
    Icon = "rbxassetid://4483345998"
})

-- 作者信息标签页
local AuthorTab = Window:MakeTab({
    Name = "作者信息",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AuthorTab:AddParagraph("作者", "小黄")
AuthorTab:AddParagraph("作者QQ", "1357377308")
AuthorTab:AddParagraph("QQ群", "待更新")

-- 圆形按钮生成器
local function addRoundButton(tab, config)
    local btn = tab:AddButton(config)
    if btn.Instance then
        -- 按钮设为圆形（高度=宽度时为正圆）
        btn.Instance.Size = UDim2.new(0, 120, 0, 36) -- 适配圆形的比例
        makeRound(btn.Instance)
        -- 增加悬停效果
        local hover = Instance.new("UIScale")
        hover.Scale = 1
        hover.Parent = btn.Instance
        btn.Instance.MouseEnter:Connect(function() hover.Scale = 1.05 end)
        btn.Instance.MouseLeave:Connect(function() hover.Scale = 1 end)
    end
    return btn
end

-- 作者信息页按钮
addRoundButton(AuthorTab, {
    Name = "复制作者QQ",
    Callback = function()
        setclipboard("1357377308")
        OrionLib:MakeNotification({Name = "成功", Content = "QQ已复制", Time = 2})
    end,
    Color = Color3.fromRGB(70, 130, 255)
})

addRoundButton(AuthorTab, {
    Name = "复制QQ群",
    Callback = function()
        setclipboard("")
        OrionLib:MakeNotification({Name = "提示", Content = "群号暂未更新", Time = 2})
    end,
    Color = Color3.fromRGB(100, 200, 100)
})

-- 玩家信息标签页
local PlayerTab = Window:MakeTab({
    Name = "玩家信息",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

PlayerTab:AddParagraph("您的用户名", player.Name)
PlayerTab:AddParagraph("您的ID", tostring(player.UserId))
PlayerTab:AddParagraph("注入器", identifyexecutor() or "未知")
PlayerTab:AddParagraph("服务器ID", tostring(game.GameId))

-- 玩家功能标签页（圆形控件优化）
local FunctionTab = Window:MakeTab({
    Name = "玩家功能",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MovementSection = FunctionTab:AddSection({Name = "移动控制"})

-- 圆形滑块
local function addRoundSlider(tab, config)
    local slider = tab:AddSlider(config)
    if slider.Instance then
        -- 滑块轨道圆形化
        local track = slider.Instance:FindFirstChild("Track")
        if track then
            makeRound(track, UDim.new(0.3, 0)) -- 轨道圆角
        end
        -- 滑块手柄圆形化（正圆）
        local handle = slider.Instance:FindFirstChild("Handle")
        if handle then
            handle.Size = UDim2.new(0, 20, 0, 20) -- 正方形→圆形
            makeRound(handle)
        end
    end
    return slider
end

addRoundSlider(FunctionTab, {
    Name = "移动速度",
    Min = 16,
    Max = 200,
    Default = 16,
    Color = Color3.fromRGB(70, 130, 255),
    Increment = 1,
    ValueName = "单位",
    Callback = function(Value)
        if player.Character and player.Character.Humanoid then
            player.Character.Humanoid.WalkSpeed = Value
            OrionLib:MakeNotification({Name = "设置成功", Content = "移动速度: "..Value, Time = 1})
        end
    end
})

addRoundSlider(FunctionTab, {
    Name = "跳跃高度",
    Min = 50,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(100, 200, 100),
    Increment = 1,
    ValueName = "单位",
    Callback = function(Value)
        if player.Character and player.Character.Humanoid then
            player.Character.Humanoid.JumpPower = Value
            OrionLib:MakeNotification({Name = "设置成功", Content = "跳跃高度: "..Value, Time = 1})
        end
    end
})

local OtherSection = FunctionTab:AddSection({Name = "其他功能"})

-- 圆形开关
local nightToggle = FunctionTab:AddToggle({
    Name = "夜视模式",
    Default = false,
    Callback = function(Value)
        Lighting.Ambient = Value and Color3.new(0.5, 0.5, 0.5) or Color3.new(0, 0, 0)
        Lighting.Brightness = Value and 2 or 1
        OrionLib:MakeNotification({
            Name = Value and "夜视开启" or "夜视关闭",
            Content = Value and "环境亮度已提升" or "环境亮度已恢复",
            Time = 1.5
        })
    end,
    Color = Color3.fromRGB(255, 165, 0)
})

-- 优化开关圆形样式
if nightToggle.Instance then
    local switch = nightToggle.Instance:FindFirstChild("Switch")
    if switch then
        makeRound(switch, UDim.new(0.3, 0)) -- 开关底座圆角
    end
    local handle = nightToggle.Instance:FindFirstChild("Handle")
    if handle then
        handle.Size = UDim2.new(0, 20, 0, 20) -- 圆形手柄
        makeRound(handle)
    end
end

-- 脚本中心标签页（圆形按钮优化）
local ScriptCenterTab = Window:MakeTab({
    Name = "脚本中心",
    Icon = "rbxassetid://4483346000",
    PremiumOnly = false
})

-- 圆形加载按钮（带缩放动画）
addRoundButton(ScriptCenterTab, {
    Name = "加载皮脚本",
    Callback = function()
        local isLoading = false
        if isLoading then
            OrionLib:MakeNotification({Name = "提示", Content = "加载中，请稍候...", Time = 2})
            return
        end
        
        isLoading = true
        OrionLib:MakeNotification({Name = "开始加载", Content = "正在加载皮脚本...", Time = 3})
        
        task.spawn(function()
            pcall(function()
                getgenv().XiaoPi = "皮脚本QQ群1002100032" 
                loadstring(game:HttpGet("https://raw.githubusercontent.com/xiaopi77/xiaopi77/main/QQ1002100032-Roblox-Pi-script.lua"))()
                OrionLib:MakeNotification({Name = "加载成功", Content = "皮脚本已加载完成！", Time = 3})
            end)
            isLoading = false
        end)
    end,
    Color = Color3.fromRGB(123, 104, 238)
})

-- 主窗口圆形化
OrionLib:Init()
if Window.Instance then
    local mainFrame = Window.Instance:FindFirstChild("MainFrame")
    if mainFrame then
        makeRound(mainFrame, UDim.new(0.08, 0)) -- 窗口大圆角
    end
end
