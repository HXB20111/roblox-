-- 加载Orion库（增加错误防护）
local OrionLib = loadstring(game:HttpGet("https://pastebin.com/raw/FUEx0f3G"))()
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")

-- 工具函数：创建圆形边角（统一管理）
local function makeRound(obj, radius)
    if not obj:IsA("GuiObject") then return end
    local corner = Instance.new("UICorner")
    corner.CornerRadius = radius or UDim.new(0.5, 0)
    corner.Parent = obj
    return corner
end

-- 工具函数：显示通知（统一风格）
local function showNotify(title, content, time)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = content,
            Duration = time or 2,
            Icon = "rbxassetid://4483345998"
        })
    end)
end

-- 北京时间显示面板
local LBLG = Instance.new("ScreenGui")
LBLG.Name = "LBLG"
LBLG.Parent = game.CoreGui
LBLG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local LBL = Instance.new("TextLabel")
LBL.Name = "LBL"
LBL.Parent = LBLG
LBL.BackgroundTransparency = 1
LBL.BorderSizePixel = 0
LBL.Position = UDim2.new(0.75, 0, 0.01, 0)
LBL.Size = UDim2.new(0, 150, 0, 20)
LBL.Font = Enum.Font.GothamSemibold
LBL.Text = "加载中..."
LBL.TextColor3 = Color3.new(1, 1, 1)
LBL.TextSize = 14
LBL.RichText = true

-- 彩色时间逻辑
local rainbowColors = {
    "<font color='#FF6B6B'>", "<font color='#FFD166'>", 
    "<font color='#06D6A0'>", "<font color='#118AB2'>", "<font color='#9B5DE5'>"
}
local colorIndex = 1
local colorTimer = 0
local gradientDuration = 1.5

RunService.Heartbeat:Connect(function(deltaTime)
    colorTimer += deltaTime
    if colorTimer >= gradientDuration then
        colorIndex = colorIndex % #rainbowColors + 1
        colorTimer = 0
    end
    LBL.Text = rainbowColors[colorIndex] .. "北京时间: " .. os.date("%H:%M:%S") .. "</font>"
end)

-- 创建主窗口
local Window = OrionLib:MakeWindow({
    Name = "黄脚本",
    HidePremium = false,
    SaveConfig = true,
    IntroText = "黄脚本 - 功能面板",
    ConfigFolder = "黄脚本",
    Theme = "Dark",
    Icon = "rbxassetid://4483345998"
})

-- 欢迎通知
showNotify("黄脚本", "欢迎使用！功能已加载", 4)

-- 作者信息标签页
local AuthorTab = Window:MakeTab({
    Name = "作者信息",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AuthorTab:AddParagraph("作者", "小黄")
AuthorTab:AddParagraph("作者QQ", "1357377308")
AuthorTab:AddParagraph("QQ群", "543121803")

-- 圆形按钮生成器（优化交互）
local function addRoundButton(tab, config)
    local btn = tab:AddButton(config)
    if btn.Instance and btn.Instance:IsA("GuiButton") then
        btn.Instance.Size = UDim2.new(0, 120, 0, 36)
        makeRound(btn.Instance)
        
        -- 悬停效果（缩放+高亮）
        local hover = Instance.new("UIScale")
        hover.Scale = 1
        hover.Parent = btn.Instance
        
        local highlight = Instance.new("UIStroke")
        highlight.Color = Color3.new(1, 1, 1)
        highlight.Transparency = 1
        highlight.Thickness = 1
        highlight.Parent = btn.Instance
        
        btn.Instance.MouseEnter:Connect(function()
            hover.Scale = 1.05
            highlight.Transparency = 0.7
        end)
        btn.Instance.MouseLeave:Connect(function()
            hover.Scale = 1
            highlight.Transparency = 1
        end)
    end
    return btn
end

-- 作者信息页按钮
addRoundButton(AuthorTab, {
    Name = "复制作者QQ",
    Callback = function()
        pcall(function()
            setclipboard("1357377308")
            showNotify("成功", "QQ已复制", 2)
        end)
    end,
    Color = Color3.fromRGB(70, 130, 255)
})

addRoundButton(AuthorTab, {
    Name = "复制QQ群",
    Callback = function()
        pcall(function()
            setclipboard("543121803")
            showNotify("成功", "QQ群号已复制", 2)
        end)
    end,
    Color = Color3.fromRGB(100, 200, 100)
})

-- 玩家信息标签页
local PlayerTab = Window:MakeTab({
    Name = "玩家信息",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

PlayerTab:AddParagraph("您的用户名", player.Name)
PlayerTab:AddParagraph("您的ID", tostring(player.UserId))
PlayerTab:AddParagraph("注入器", identifyexecutor and identifyexecutor() or "未知")
PlayerTab:AddParagraph("服务器ID", tostring(game.GameId))

-- 玩家功能标签页（优化文本框）
local FunctionTab = Window:MakeTab({
    Name = "玩家功能",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MovementSection = FunctionTab:AddSection({Name = "移动设置"})

-- 文本框统一配置（带验证和圆角）
local function addSettingTextbox(tab, config)
    local textbox = tab:AddTextbox({
        Name = config.Name,
        Default = config.Default or "",
        TextDisappear = true,
        Callback = function(Value)
            -- 输入验证：必须为数字
            local num = tonumber(Value)
            if not num then
                return showNotify("错误", "请输入有效数字", 2)
            end
            
            -- 执行配置的回调
            local success, err = pcall(config.Callback, num)
            if success then
                showNotify("成功", config.SuccessMsg, 1.5)
            else
                showNotify("错误", "设置失败: " .. err, 2)
            end
        end
    })
    
    -- 文本框圆角处理
    task.delay(0.1, function()
        if textbox.Instance then
            local input = textbox.Instance:FindFirstChildOfClass("TextBox", true)
            if input then
                makeRound(input, UDim.new(0.2, 0)) -- 适中圆角
                -- 增加输入框边框高亮
                local border = Instance.new("UIStroke")
                border.Color = Color3.new(0.7, 0.7, 0.7)
                border.Transparency = 0.8
                border.Thickness = 1
                border.Parent = input
            end
        end
    end)
    
    return textbox
end

-- 添加跳跃高度设置
addSettingTextbox(FunctionTab, {
    Name = "跳跃高度设置",
    SuccessMsg = "跳跃高度已更新",
    Callback = function(num)
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = num
        else
            error("角色未加载")
        end
    end
})

-- 添加移动速度设置
addSettingTextbox(FunctionTab, {
    Name = "移动速度设置",
    SuccessMsg = "移动速度已更新",
    Callback = function(num)
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = num
        else
            error("角色未加载")
        end
    end
})

-- 添加重力设置
addSettingTextbox(FunctionTab, {
    Name = "重力设置",
    SuccessMsg = "重力已更新",
    Callback = function(num)
        Workspace.Gravity = num
    end
})

local OtherSection = FunctionTab:AddSection({Name = "其他功能"})

-- 夜视模式开关（优化样式）
local nightToggle = FunctionTab:AddToggle({
    Name = "夜视模式",
    Default = false,
    Callback = function(enabled)
        Lighting.Ambient = enabled and Color3.new(0.5, 0.5, 0.5) or Color3.new(0, 0, 0)
        Lighting.Brightness = enabled and 2 or 1
        showNotify(
            enabled and "夜视开启" or "夜视关闭",
            enabled and "环境亮度已提升" or "环境亮度已恢复",
            1.5
        )
    end,
    Color = Color3.fromRGB(255, 165, 0)
})

-- 开关圆角优化
if nightToggle.Instance then
    local switch = nightToggle.Instance:FindFirstChild("Switch", true)
    local handle = nightToggle.Instance:FindFirstChild("Handle", true)
    switch and makeRound(switch, UDim.new(0.3, 0))
    if handle then
        handle.Size = UDim2.new(0, 20, 0, 20)
        makeRound(handle)
    end
end

-- 脚本中心标签页
local ScriptCenterTab = Window:MakeTab({
    Name = "脚本中心",
    Icon = "rbxassetid://4483346000",
    PremiumOnly = false
})

addRoundButton(ScriptCenterTab, {
    Name = "加载皮脚本",
    Callback = function()
        local loadLock = false
        if loadLock then
            return showNotify("提示", "加载中，请稍候...", 2)
        end
        
        loadLock = true
        showNotify("加载中", "正在获取皮脚本资源...", 3)
        
        task.spawn(function()
            local success, err = pcall(function()
                getgenv().XiaoPi = "皮脚本QQ群1002100032" 
                loadstring(game:HttpGet("https://raw.githubusercontent.com/xiaopi77/xiaopi77/main/QQ1002100032-Roblox-Pi-script.lua"))()
            end)
            
            loadLock = false
            if success then
                showNotify("成功", "皮脚本已加载完成", 3)
            else
                showNotify("失败", "加载错误: " .. err, 3)
            end
        end)
    end,
    Color = Color3.fromRGB(123, 104, 238)
})

-- 主窗口圆形化
OrionLib:Init()
task.delay(0.1, function()
    if Window.Instance then
        local mainFrame = Window.Instance:FindFirstChild("MainFrame", true)
        mainFrame and makeRound(mainFrame, UDim.new(0.08, 0))
    end
end)
