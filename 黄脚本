-- 加载Orion库（增加错误防护与备用链接）
local OrionLib, loadSuccess
local success, err = pcall(function()
    OrionLib = loadstring(game:HttpGet("https://pastebin.com/raw/FUEx0f3G"))()
    loadSuccess = true
end)
if not success or not OrionLib then
    warn("主链接加载失败，尝试备用链接: " .. (err or "未知错误"))
    local success2, err2 = pcall(function()
        OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Orion-UI-Library/Orion/main/source"))()
        loadSuccess = true
    end)
    if not success2 or not OrionLib then
        error("Orion库加载失败: " .. (err2 or "未知错误"))
        return
    end
end

local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")

-- 工具函数：创建圆形边角（增加安全检查）
local function makeRound(obj, radius)
    if not obj or not obj:IsA("GuiObject") then return end
    local corner = Instance.new("UICorner")
    corner.CornerRadius = radius or UDim.new(0.5, 0)
    corner.Parent = obj
    return corner
end

-- 工具函数：显示通知（兼容不同环境）
local function showNotify(title, content, time)
    pcall(function()
        -- 优先使用Orion的通知系统
        if OrionLib.MakeNotification then
            OrionLib:MakeNotification({
                Name = title,
                Content = content,
                Time = time or 2,
                Image = "rbxassetid://4483345998"
            })
        else
            -- 备用系统通知
            StarterGui:SetCore("SendNotification", {
                Title = title,
                Text = content,
                Duration = time or 2,
                Icon = "rbxassetid://4483345998"
            })
        end
    end)
end

-- 北京时间显示面板（防重叠处理）
local LBLG = Instance.new("ScreenGui")
LBLG.Name = "LBLG_TimeDisplay" -- 唯一名称防冲突
LBLG.Parent = game.CoreGui
LBLG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
LBLG.Enabled = true

local LBL = Instance.new("TextLabel")
LBL.Name = "TimeLabel"
LBL.Parent = LBLG
LBL.BackgroundTransparency = 1
LBL.BorderSizePixel = 0
LBL.Position = UDim2.new(0.75, 0, 0.01, 0)
LBL.Size = UDim2.new(0, 150, 0, 20)
LBL.Font = Enum.Font.GothamSemibold
LBL.Text = "加载中..."
LBL.TextColor3 = Color3.new(1, 1, 1)
LBL.TextSize = 14
LBL.RichText = true

-- 彩色时间逻辑（防内存泄漏）
local rainbowColors = {
    "<font color='#FF6B6B'>", "<font color='#FFD166'>", 
    "<font color='#06D6A0'>", "<font color='#118AB2'>", "<font color='#9B5DE5'>"
}
local colorIndex = 1
local colorTimer = 0
local gradientDuration = 1.5
local heartbeatConnection

local function HeartbeatUpdate(deltaTime)
    colorTimer += deltaTime
    if colorTimer >= gradientDuration then
        colorIndex = colorIndex % #rainbowColors + 1
        colorTimer = 0
    end
    LBL.Text = rainbowColors[colorIndex] .. "北京时间: " .. os.date("%H:%M:%S") .. "</font>"
end

heartbeatConnection = RunService.Heartbeat:Connect(HeartbeatUpdate)

-- 创建主窗口
local Window = OrionLib:MakeWindow({
    Name = "黄脚本",
    HidePremium = false,
    SaveConfig = true,
    IntroText = "黄脚本 - 功能面板",
    ConfigFolder = "黄脚本",
    Theme = "Dark",
    Icon = "rbxassetid://4483345998"
})

-- 欢迎通知
showNotify("黄脚本", "欢迎使用！功能已加载", 4)

-- 作者信息标签页
local AuthorTab = Window:MakeTab({
    Name = "作者信息",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AuthorTab:AddParagraph("作者", "小黄")
AuthorTab:AddParagraph("作者QQ", "1357377308")
AuthorTab:AddParagraph("QQ群", "543121803")

-- 圆形按钮生成器（修复动画错误）
local function addRoundButton(tab, config)
    local btn = tab:AddButton(config)
    if btn.Instance and btn.Instance:IsA("GuiButton") then
        btn.Instance.Size = UDim2.new(0, 120, 0, 36)
        makeRound(btn.Instance)
        
        -- 修复悬停动画内存泄漏
        local hover = Instance.new("UIScale")
        hover.Scale = 1
        hover.Parent = btn.Instance
        
        local highlight = Instance.new("UIStroke")
        highlight.Color = Color3.new(1, 1, 1)
        highlight.Transparency = 1
        highlight.Thickness = 1
        highlight.Parent = btn.Instance
        
        -- 连接存储，便于清理
        local enterConn = btn.Instance.MouseEnter:Connect(function()
            hover.Scale = 1.05
            highlight.Transparency = 0.7
        end)
        local leaveConn = btn.Instance.MouseLeave:Connect(function()
            hover.Scale = 1
            highlight.Transparency = 1
        end)
        
        -- 窗口关闭时清理连接
        btn.Instance.AncestryChanged:Connect(function(_, parent)
            if not parent then
                enterConn:Disconnect()
                leaveConn:Disconnect()
            end
        end)
    end
    return btn
end

-- 作者信息页按钮（修复复制功能）
addRoundButton(AuthorTab, {
    Name = "复制作者QQ",
    Callback = function()
        pcall(function()
            -- 兼容不同执行器的复制函数
            if setclipboard then
                setclipboard("1357377308")
            elseif game:GetService("ClipboardService") then
                game:GetService("ClipboardService"):SetClipboard("1357377308")
            else
                error("不支持复制功能")
            end
            showNotify("成功", "QQ已复制", 2)
        end)
    end,
    Color = Color3.fromRGB(70, 130, 255)
})

addRoundButton(AuthorTab, {
    Name = "复制QQ群",
    Callback = function()
        pcall(function()
            if setclipboard then
                setclipboard("543121803")
            elseif game:GetService("ClipboardService") then
                game:GetService("ClipboardService"):SetClipboard("543121803")
            else
                error("不支持复制功能")
            end
            showNotify("成功", "QQ群号已复制", 2)
        end)
    end,
    Color = Color3.fromRGB(100, 200, 100)
})

-- 玩家信息标签页（修复信息获取错误）
local PlayerTab = Window:MakeTab({
    Name = "玩家信息",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- 安全获取注入器信息
local executorName = "未知"
pcall(function()
    if identifyexecutor then
        executorName = identifyexecutor() or "未知"
    end
end)

PlayerTab:AddParagraph("您的用户名", player.Name)
PlayerTab:AddParagraph("您的ID", tostring(player.UserId))
PlayerTab:AddParagraph("注入器", executorName)
PlayerTab:AddParagraph("服务器ID", tostring(game.GameId))

-- 玩家功能标签页（修复文本框错误）
local FunctionTab = Window:MakeTab({
    Name = "玩家功能",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MovementSection = FunctionTab:AddSection({Name = "移动设置"})

-- 文本框统一配置（修复数值错误）
local function addSettingTextbox(tab, config)
    local textbox = tab:AddTextbox({
        Name = config.Name,
        Default = config.Default or "",
        TextDisappear = true,
        Callback = function(Value)
            -- 严格验证数值有效性
            local num = tonumber(Value)
            if not num or num <= 0 then -- 防止负数或零值
                return showNotify("错误", "请输入正数", 2)
            end
            
            -- 执行配置的回调
            local success, err = pcall(config.Callback, num)
            if success then
                showNotify("成功", config.SuccessMsg, 1.5)
            else
                showNotify("错误", "设置失败: " .. err, 2)
            end
        end
    })
    
    -- 文本框样式处理（确保找到控件）
    task.delay(0.2, function()
        if textbox.Instance then
            local input = textbox.Instance:FindFirstChildOfClass("TextBox", true)
            if input then
                makeRound(input, UDim.new(0.2, 0))
                local border = Instance.new("UIStroke")
                border.Color = Color3.new(0.7, 0.7, 0.7)
                border.Transparency = 0.8
                border.Thickness = 1
                border.Parent = input
            end
        end
    end)
    
    return textbox
end

-- 添加跳跃高度设置（修复角色获取错误）
addSettingTextbox(FunctionTab, {
    Name = "跳跃高度设置",
    SuccessMsg = "跳跃高度已更新",
    Callback = function(num)
        -- 确保角色和人形存在
        local character = player.Character or player.CharacterAdded:Wait() -- 等待角色加载
        local humanoid = character:FindFirstChildOfClass("Humanoid") or character:WaitForChild("Humanoid", 5)
        if humanoid then
            humanoid.JumpPower = num
        else
            error("未找到人形对象")
        end
    end
})

-- 添加移动速度设置（同上）
addSettingTextbox(FunctionTab, {
    Name = "移动速度设置",
    SuccessMsg = "移动速度已更新",
    Callback = function(num)
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid") or character:WaitForChild("Humanoid", 5)
        if humanoid then
            humanoid.WalkSpeed = num
        else
            error("未找到人形对象")
        end
    end
})

-- 添加重力设置（限制范围）
addSettingTextbox(FunctionTab, {
    Name = "重力设置",
    SuccessMsg = "重力已更新",
    Callback = function(num)
        -- 重力值合理范围限制
        if num < 100 or num > 2000 then
            error("重力值应在100-2000之间")
        end
        Workspace.Gravity = num
    end
})

local OtherSection = FunctionTab:AddSection({Name = "其他功能"})

-- 夜视模式开关（修复光照设置）
local nightToggle = FunctionTab:AddToggle({
    Name = "夜视模式",
    Default = false,
    Callback = function(enabled)
        -- 平滑过渡光照（避免突变）
        local targetAmbient = enabled and Color3.new(0.5, 0.5, 0.5) or Color3.new(0, 0, 0)
        local targetBrightness = enabled and 2 or 1
        
        -- 渐进式调整
        for i = 1, 10 do
            Lighting.Ambient = Lighting.Ambient:Lerp(targetAmbient, 0.2 * i)
            Lighting.Brightness = Lighting.Brightness + (targetBrightness - Lighting.Brightness) * 0.2 * i
            task.wait(0.05)
        end
        
        showNotify(
            enabled and "夜视开启" or "夜视关闭",
            enabled and "环境亮度已提升" or "环境亮度已恢复",
            1.5
        )
    end,
    Color = Color3.fromRGB(255, 165, 0)
})

-- 开关样式修复
task.delay(0.1, function() -- 延迟确保控件加载
    if nightToggle.Instance then
        local switch = nightToggle.Instance:FindFirstChild("Switch", true)
        local handle = nightToggle.Instance:FindFirstChild("Handle", true)
        if switch then
            makeRound(switch, UDim.new(0.3, 0))
        end
        if handle then
            handle.Siz
